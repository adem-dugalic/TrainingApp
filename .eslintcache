[{"D:\\from ssd\\GitHub\\TrainingApp\\src\\index.tsx":"1","D:\\from ssd\\GitHub\\TrainingApp\\src\\reportWebVitals.ts":"2","D:\\from ssd\\GitHub\\TrainingApp\\src\\App.tsx":"3","D:\\from ssd\\GitHub\\TrainingApp\\src\\Components\\Bar.tsx":"4","D:\\from ssd\\GitHub\\TrainingApp\\src\\Components\\Drawer.tsx":"5","D:\\from ssd\\GitHub\\TrainingApp\\src\\Components\\Home.tsx":"6","D:\\from ssd\\GitHub\\TrainingApp\\src\\Components\\Coursetable.tsx":"7","D:\\from ssd\\GitHub\\TrainingApp\\src\\Components\\Register.tsx":"8","D:\\from ssd\\GitHub\\TrainingApp\\src\\Components\\Login.tsx":"9","D:\\from ssd\\GitHub\\TrainingApp\\src\\Components\\AllCoursesTable.tsx":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":2911,"mtime":1607952952530,"results":"14","hashOfConfig":"12"},{"size":1675,"mtime":1607952895963,"results":"15","hashOfConfig":"12"},{"size":6264,"mtime":1607954380624,"results":"16","hashOfConfig":"12"},{"size":236,"mtime":1607878069422,"results":"17","hashOfConfig":"12"},{"size":4764,"mtime":1607943459305,"results":"18","hashOfConfig":"12"},{"size":4315,"mtime":1607894049042,"results":"19","hashOfConfig":"12"},{"size":4096,"mtime":1607934857742,"results":"20","hashOfConfig":"12"},{"size":5393,"mtime":1607952883672,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1tfmndk",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"24"},"D:\\from ssd\\GitHub\\TrainingApp\\src\\index.tsx",[],["50","51"],"D:\\from ssd\\GitHub\\TrainingApp\\src\\reportWebVitals.ts",[],"D:\\from ssd\\GitHub\\TrainingApp\\src\\App.tsx",["52","53","54","55","56","57"],"import React ,{useState}  from 'react';\nimport { BrowserRouter as Switch, Route } from \"react-router-dom\";\nimport './css/App.css';\n\n//Style imports\nimport {ThemeProvider, createMuiTheme} from '@material-ui/core/styles'\nimport {orange} from '@material-ui/core/colors'\nimport 'fontsource-roboto'\nimport Container from '@material-ui/core/Container'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport { Widgets } from '@material-ui/icons';\n\n//Components\nimport Bar from './Components/Bar'\nimport Drawer from './Components/Drawer'\nimport Home from './Components/Home'\nimport Coursetable from './Components/Coursetable'\nimport { Register } from './Components/Register';\nimport { Login } from './Components/Login';\nimport { AllCoursesTable } from './Components/AllCoursesTable';\n\nconst theme = createMuiTheme({\n  // palette:{\n  //   primary: {\n  //     main: orange[500]\n  //   }\n  // }\n    \n})\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  if(width < 800){\n    return true;\n  }else\n    return false;\n}\n\nfunction App() {\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const [isMobile, setisMobile] = useState(false);\n  \n  window.addEventListener('resize', () => {\n    setisMobile(getWindowDimensions);\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"backgroundDiv\">\n        <Switch>\n          <Route exact path=\"/\">\n              <Login/>  \n          </Route>\n          <Route exact path=\"/register\">\n              <Register/>  \n          </Route>\n          <Route exact path=\"/Home\">\n            <div className=\"panelDiv\">\n            <Drawer setMobileOpen={setMobileOpen} mobileOpen={mobileOpen}/>\n              <main className=\"main\">\n                  <div className=\"homeDiv\">\n                    {isMobile ? <Bar setMobileOpen={setMobileOpen} mobileOpen={mobileOpen}/> : ''} \n                    <Home/>\n                  </div>\n              </main>\n            </div>\n          </Route>\n          <Route exact path=\"/MyCourses\">\n            <div className=\"panelDiv\">\n            <Drawer setMobileOpen={setMobileOpen} mobileOpen={mobileOpen}/>\n              <main className=\"main\">\n                  <Bar setMobileOpen={setMobileOpen} mobileOpen={mobileOpen}/>\n                  <div className=\"MyCourses\">\n                    <Coursetable/>\n                  </div>\n              </main>\n            </div>\n          </Route>\n          <Route exact path=\"/AllCourses\">\n            <div className=\"panelDiv\">\n            <Drawer setMobileOpen={setMobileOpen} mobileOpen={mobileOpen}/>\n              <main className=\"main\">\n                  <Bar setMobileOpen={setMobileOpen} mobileOpen={mobileOpen}/>\n                  <AllCoursesTable/>\n              </main>\n            </div>\n          </Route>\n        </Switch>  \n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","D:\\from ssd\\GitHub\\TrainingApp\\src\\Components\\Bar.tsx",["58","59"],"import React, {useState} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n       [theme.breakpoints.up('sm')]: {\r\n         width: `calc(100% - 200px)`,\r\n         marginLeft: 200,\r\n       },\r\n       backgroundColor: '#292626',\r\n     },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\ninterface Mobile {\r\n  setMobileOpen: Function;\r\n  mobileOpen: boolean;\r\n}\r\n\r\nexport default function Bar(props:Mobile) {\r\n  const classes = useStyles();\r\n  const mobile = props.mobileOpen;\r\n  // const [customS, setCustomS] = React.useState('classes.noShow');\r\n\r\n  const handleDrawerToggle = () => {\r\n    props.setMobileOpen(!mobile);\r\n  };\r\n  return(\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            IUS pre-registration system\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n  )\r\n\r\n}","D:\\from ssd\\GitHub\\TrainingApp\\src\\Components\\Drawer.tsx",["60","61"],"D:\\from ssd\\GitHub\\TrainingApp\\src\\Components\\Home.tsx",["62"],"import React ,{useState}  from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nexport default function Home() {\r\n  return(\r\n    <Typography variant='h4'>WELCOME TO IUS PRE-REGISTRATION SYSTEM</Typography>\r\n  )\r\n\r\n}","D:\\from ssd\\GitHub\\TrainingApp\\src\\Components\\Coursetable.tsx",["63","64"],"import React ,{useState}  from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n\r\ninterface Column {\r\n  id: 'name' | 'code' | 'population' | 'size' | 'density';\r\n  label: string;\r\n  minWidth?: number;\r\n  align?: 'right';\r\n  format?: (value: number) => string;\r\n}\r\n\r\nconst columns: Column[] = [\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\r\n  {\r\n    id: 'population',\r\n    label: 'Population',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value: number) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'size',\r\n    label: 'Size\\u00a0(km\\u00b2)',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value: number) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'density',\r\n    label: 'Density',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value: number) => value.toFixed(2),\r\n  },\r\n];\r\n\r\ninterface Data {\r\n  name: string;\r\n  code: string;\r\n  population: number;\r\n  size: number;\r\n  density: number;\r\n}\r\n\r\nfunction createData(name: string, code: string, population: number, size: number): Data {\r\n  const density = population / size;\r\n  return { name, code, population, size, density };\r\n}\r\n\r\nconst rows = [\r\n  createData('India', 'IN', 1324171354, 3287263),\r\n  createData('China', 'CN', 1403500365, 9596961),\r\n  createData('Italy', 'IT', 60483973, 301340),\r\n  createData('United States', 'US', 327167434, 9833520),\r\n  createData('Canada', 'CA', 37602103, 9984670),\r\n  createData('Australia', 'AU', 25475400, 7692024),\r\n  createData('Germany', 'DE', 83019200, 357578),\r\n  createData('Ireland', 'IE', 4857000, 70273),\r\n  createData('Mexico', 'MX', 126577691, 1972550),\r\n  createData('Japan', 'JP', 126317000, 377973),\r\n  createData('France', 'FR', 67022000, 640679),\r\n  createData('United Kingdom', 'GB', 67545757, 242495),\r\n  createData('Russia', 'RU', 146793744, 17098246),\r\n  createData('Nigeria', 'NG', 200962417, 923768),\r\n  createData('Brazil', 'BR', 210147125, 8515767),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n  TableHead: {\r\n    backgroundColor: '#292626',\r\n    color: '#fff'\r\n  }\r\n});\r\n\r\nexport default function Coursetable() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow >\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  className={classes.TableHead}\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}","D:\\from ssd\\GitHub\\TrainingApp\\src\\Components\\Register.tsx",["65","66"],"import React from 'react'\r\nimport Logo from \"../img/IUSlogo2.png\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { useQuery, QueryCache, ReactQueryCacheProvider } from 'react-query';\r\nimport axios from \"axios\";\r\n\r\n\r\nimport \"../css/custom.css\";\r\nimport \"../css/main.css\";\r\nimport \"../css/util.css\";\r\n\r\n\r\ninterface RegisterProps {\r\n  userID?: string,\r\n  password?: string,\r\n  ConfirmPassword?: string,\r\n}\r\n\r\n\r\nexport const Register: React.FC<RegisterProps> = ({}) => {\r\n  // const[register, setRegister] = useState<object>({userID:\"\", password:\"\", confirmPassword:\"\"});\r\n  const { register, handleSubmit } = useForm<RegisterProps>();\r\n\r\n  const onSubmit = (data: RegisterProps) => {\r\n    console.log(data)\r\n\r\n    if (data.ConfirmPassword !== data.password) {\r\n      alert(\"Error\");\r\n      window.location.href = \"/register\";\r\n      return;\r\n    }\r\n\r\n    const newUser = {\r\n      userID: data.userID,\r\n      password: data.password,\r\n    };\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/users/signup\", newUser)\r\n      .then(() => {\r\n        console.log(\"Success\");\r\n        window.location.href = \"/\";\r\n      })\r\n      .catch((err) => alert(\"Error: \" + err));\r\n\r\n    //window.location = \"/\"; don't refresh the page before the request is finish....\r\n  }\r\n\r\n    return (\r\n      <div className=\"limiter\">\r\n        <div className=\"container-login100\">\r\n          <div className=\"wrap-login100\">\r\n            <form\r\n              onSubmit={handleSubmit(onSubmit)}\r\n              className=\"login100-form validate-form\"\r\n            >\r\n              <span className=\"login100-form-logo\">\r\n                <img className=\"img\" src={Logo} />\r\n              </span>\r\n\r\n              <span className=\"login100-form-title p-b-34 p-t-27\">\r\n                Register\r\n              </span>\r\n\r\n              <div\r\n                className=\"wrap-input100 validate-input\"\r\n                data-validate=\"Enter ID\"\r\n              >\r\n                <input\r\n                  className=\"input100\"\r\n                  type=\"text\"\r\n                  name=\"userID\"\r\n                  ref={register}\r\n                  placeholder=\"ID\"\r\n                />\r\n                <span\r\n                  className=\"focus-input100\"\r\n                  data-placeholder=\"&#xf207;\"\r\n                ></span>\r\n              </div>\r\n\r\n              <div\r\n                className=\"wrap-input100 validate-input\"\r\n                data-validate=\"Enter password\"\r\n              >\r\n                <input\r\n                  className=\"input100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  ref={register}\r\n                  placeholder=\"Password\"\r\n                />\r\n                <span\r\n                  className=\"focus-input100\"\r\n                  data-placeholder=\"&#xf191;\"\r\n                ></span>\r\n              </div>\r\n\r\n              <div\r\n                className=\"wrap-input100 validate-input\"\r\n                data-validate=\"Confirm password\"\r\n              >\r\n                <input\r\n                  className=\"input100\"\r\n                  type=\"password\"\r\n                  name=\"confirmPassword\"\r\n                  ref={register}\r\n                  placeholder=\"Confirm password\"\r\n                />\r\n                <span\r\n                  className=\"focus-input100\"\r\n                  data-placeholder=\"&#xf191;\"\r\n                ></span>\r\n              </div>\r\n\r\n              <div className=\"contact100-form-checkbox\">\r\n                <input\r\n                  className=\"input-checkbox100\"\r\n                  id=\"ckb1\"\r\n                  type=\"checkbox\"\r\n                  name=\"remember-me\"\r\n                />\r\n                <label\r\n                  className=\"label-checkbox100\" //for=\"ckb1\"\r\n                >\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"container-login100-form-btn\">\r\n                <button className=\"login100-form-btn\">Signup</button>\r\n              </div>\r\n\r\n              <div className=\"text-center p-t-90\">\r\n                <Link className=\"txt1\" to=\"/\">\r\n                  Have an account!? Log in now!\r\n                </Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}","D:\\from ssd\\GitHub\\TrainingApp\\src\\Components\\Login.tsx",["67","68"],"import React from 'react'\r\nimport Logo from \"../img/IUSlogo2.png\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { useQuery, QueryCache, ReactQueryCacheProvider } from 'react-query';\r\nimport axios from \"axios\";\r\nimport Cookie from \"js-cookie\";\r\n\r\n\r\nimport \"../css/custom.css\";\r\nimport \"../css/main.css\";\r\nimport \"../css/util.css\";\r\n\r\ninterface LoginProps {\r\n  userID?: string,\r\n  password?: string,\r\n  isAdmin?: boolean,\r\n\r\n}\r\n\r\nexport const Login: React.FC<LoginProps> = ({}) => {\r\n\r\n  const { register, handleSubmit } = useForm<LoginProps>();\r\n\r\n  const onSubmit = (data: LoginProps) => {\r\n    const user = {\r\n      userID: data.userID,\r\n      password: data.password,\r\n    };\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/users/login\", user)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        Cookie.set(\"token\", res.data.token);\r\n        Cookie.set(\"userId\", res.data.userId);\r\n        Cookie.set(\"name\", res.data.name);\r\n        Cookie.set(\"surname\", res.data.surname);\r\n\r\n        data.isAdmin = res.data.isAdmin;\r\n\r\n        if (data.isAdmin) {\r\n          //needs testing\r\n          window.location.href = \"/AdminHome\";\r\n        } else {\r\n          //Return to the user list\r\n          window.location.href = \"/Home\";\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        \r\n        Cookie.remove(\"token\");\r\n        Cookie.remove(\"userId\");\r\n\r\n        alert(\"Error: \" + err);\r\n      });\r\n  }\r\n\r\n  //  isLogin() {\r\n  //    if (!Cookie.get(\"token\")) return false;\r\n  //    else return Cookie.get(\"token\") !== \"\" && Cookie.get(\"userId\") !== \"\";\r\n  //  }\r\n\r\n    return (\r\n      <div className=\"limiter\">\r\n        <div className=\"container-login100\">\r\n          <div className=\"wrap-login100\">\r\n            <form\r\n              onSubmit={handleSubmit(onSubmit)}\r\n              className=\"login100-form validate-form\"\r\n            >\r\n              <span className=\"login100-form-logo\">\r\n                <img className=\"img\" src={Logo} />\r\n              </span>\r\n\r\n              <span className=\"login100-form-title p-b-34 p-t-27\">Log in</span>\r\n\r\n              <div\r\n                className=\"wrap-input100 validate-input\"\r\n                data-validate=\"Enter ID\"\r\n              >\r\n                <input\r\n                  className=\"input100\"\r\n                  type=\"text\"\r\n                  name=\"userID\"\r\n                  ref={register}\r\n                  placeholder=\"ID\"\r\n                />\r\n                <span\r\n                  className=\"focus-input100\"\r\n                  data-placeholder=\"&#xf207;\"\r\n                ></span>\r\n              </div>\r\n\r\n              <div\r\n                className=\"wrap-input100 validate-input\"\r\n                data-validate=\"Enter password\"\r\n              >\r\n                <input\r\n                  className=\"input100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  ref={register}\r\n                  placeholder=\"Password\"\r\n                />\r\n                <span\r\n                  className=\"focus-input100\"\r\n                  data-placeholder=\"&#xf191;\"\r\n                ></span>\r\n              </div>\r\n\r\n              <div className=\"contact100-form-checkbox\">\r\n                <input\r\n                  className=\"input-checkbox100\"\r\n                  id=\"ckb1\"\r\n                  type=\"checkbox\"\r\n                  name=\"remember-me\"\r\n                />\r\n                <label\r\n                  className=\"label-checkbox100\" //for=\"ckb1\"\r\n                >\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"container-login100-form-btn\">\r\n                <button className=\"login100-form-btn\">Login</button>\r\n              </div>\r\n\r\n              <div className=\"text-center p-t-90\">\r\n                <Link className=\"txt1\" to=\"/register\">\r\n                  Don't have an account!? Register!\r\n                </Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div id=\"dropDownSelect1\"></div>\r\n      </div>\r\n    );\r\n}","D:\\from ssd\\GitHub\\TrainingApp\\src\\Components\\AllCoursesTable.tsx",["69","70","71"],"import React ,{useState}   from 'react'\r\nimport axios from \"axios\";\r\nimport Cookie from \"js-cookie\";\r\nimport { useQuery } from 'react-query'\r\n\r\ninterface AllCoursesTableProps {\r\n}\r\n\r\nconst fetchCourses = async() => {\r\n  const res = await fetch(\r\n    \"http://localhost:5000/courses?\" +\r\n    \"&token=\" +\r\n    Cookie.get(\"token\") +\r\n    \"&userId=\" +\r\n    Cookie.get(\"userId\"));\r\n     return res.json();\r\n  }\r\n\r\nexport const AllCoursesTable: React.FC<AllCoursesTableProps> = ({}) => {\r\n\r\n  // const[defaultSt, setDefaultSt] = useState(); // array\r\n  // const[userCourse, setUserCourse]= useState();//array\r\n  // const[courseData, setCourseData]= useState();//array\r\n  // const[page, setPage]= useState();\r\n  // const[courseId, setCourseId]= useState();//array\r\n  // const[userId, setUserId]= useState();\r\n  // const[courseID, setCourseID]= useState();\r\n\r\n  // search\r\n  // const[search, setSearch]= useState();\r\n  ////////////////////////////////////////////////////////////////\r\n\r\n  const { data, status } = useQuery('courses', fetchCourses);\r\n  \r\n\r\n  // const [Data,setData]=useState({\r\n  //   prerequisite: [],\r\n  //   dataTest: [],\r\n  //   _id: '',\r\n  //   course_id: '',\r\n  //   course_name: '',\r\n  //   Lecturer: '',\r\n  //   AcademicUnit: ''\r\n  // })\r\n  if(status === 'error') {return <div>Error</div>}\r\n  if(status === 'loading') {return <div>Loading</div>}\r\n\r\n  console.log(data.array[0].Lecturer);\r\n  console.log(status);\r\n\r\n  //const [testingArr, setTestingArr] = useState(data.array);\r\n\r\n  // setData({prerequisite:data.array.prerequisite})\r\n  const maybe = \r\n      data.array.map((item:any) => \r\n    <tr\r\n    // key = {item.course_id}\r\n      // style={\r\n      //   this.state.userCourse.includes(item._id) > 0\r\n      //     ? { display: \"none\" }\r\n      //     : { background: \"#353131\" }\r\n      // }\r\n    >\r\n      <td className=\"title\">{item.course_id}</td>\r\n      <td>\r\n        <a\r\n          className=\"ecampus\"\r\n          href={\"https://ecampus.ius.edu.ba/\" + item.Url}\r\n        >\r\n          {item.course_name}\r\n        </a>\r\n      </td>\r\n      <td>{item.Lecturer}</td>\r\n      <td>{item.AcademicUnit}</td>\r\n      <td>\r\n        {item.prerequisite.map((preq: string) => {\r\n          return preq + \" \";\r\n        })}\r\n      </td>\r\n      <td>\r\n        <div className=\"button\">\r\n          <form>\r\n            <button\r\n              id=\"work\"\r\n              className=\"courseBtn\"\r\n              // onClick={() => this.onAddItem(item._id)}\r\n            >\r\n              Add Course\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n\r\n    )\r\n\r\n\r\n  ////////////////////////////////////////////////////\r\n//   axios\r\n//   .get(\r\n//     \"http://localhost:5000/users/userCourse?token=\" +\r\n//       Cookie.get(\"token\") +\r\n//       \"&userId=\" +\r\n//       Cookie.get(\"userId\")\r\n//   )\r\n//   .then((res) => {\r\n//     this.setState({\r\n//       userCourse: res.data[0].courses,\r\n//     });\r\n//   })\r\n//   .catch((err) => alert(\"Error: \" + err));\r\n\r\n\r\n// async updateTable() {\r\n// const response = await fetch(\r\n//   \"http://localhost:5000/courses?page=\" +\r\n//     this.state.page +\r\n//     \"&token=\" +\r\n//     Cookie.get(\"token\") +\r\n//     \"&userId=\" +\r\n//     Cookie.get(\"userId\")\r\n// );\r\n// const res = await response.json();\r\n\r\n// this.setState({\r\n//   data: res.array,\r\n//   default: res.array,\r\n// });\r\n// }\r\n\r\n/*  onChangeCourse = (event) => {\r\nthis.setState({ course: event.target.value });\r\n}; */\r\n\r\n// async onAddItem(course) {\r\n// console.log(\"onAddItem stuff\");\r\n// console.log(course);\r\n// axios\r\n//   .post(\r\n//     \"http://localhost:5000/users/addCourse?token=\" +\r\n//       Cookie.get(\"token\") +\r\n//       \"&userId=\" +\r\n//       Cookie.get(\"userId\"),\r\n//     { courseId: course }\r\n//   )\r\n//   .then((res) => {\r\n//     console.log(\"Success\");\r\n//   })\r\n//   .catch((err) => alert(\"Error: \" + err));\r\n// }\r\n\r\n// // Search impelmentation\r\n// onSearch(e) {\r\n// e.preventDefault();\r\n// this.setState({\r\n//   search: e.target.value,\r\n// });\r\n// console.log(e.target.value);\r\n\r\n// if (e.target.value === 0) {\r\n//   this.setState({\r\n//     data: this.state.default,\r\n//   });\r\n//   return;\r\n// } else if (e.target.value.length < 3) return;\r\n\r\n// axios\r\n//   .get(\r\n//     \"http://localhost:5000/courses/search?value=\" +\r\n//       e.target.value +\r\n//       \"&token=\" +\r\n//       Cookie.get(\"token\") +\r\n//       \"&userId=\" +\r\n//       Cookie.get(\"userId\")\r\n//   )\r\n//   .then((res) => {\r\n//     console.log(res.data);\r\n\r\n//     this.setState({ data: res.data });\r\n//   })\r\n//   .catch((err) => {\r\n//     alert(\"Error: \" + err);\r\n//   });\r\n// }\r\n///////////////////////////////////////////////////\r\nreturn (\r\n// <QueryClientProvider client={queryClient}>\r\n    <div className=\"addCourses\">\r\n        <div className=\"allCourses\" id=\"allCourses\">\r\n          <table className=\"courses\">\r\n            <tbody>\r\n              <tr>\r\n                <th className=\"semesterNum\" colSpan={6}>\r\n                  All courses\r\n                </th>\r\n              </tr>\r\n              <tr className=\"info\">\r\n                <td>Course Code</td>\r\n                <td>Course Name</td>\r\n                <td>Professor</td>\r\n                <td>Faculty</td>\r\n                <td>Prerequisites</td>\r\n                <td>Option</td>\r\n              </tr>\r\n              {maybe} \r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n  // </QueryClientProvider>\r\n  );\r\n}",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":7,"column":9,"nodeType":"78","messageId":"79","endLine":7,"endColumn":15},{"ruleId":"76","severity":1,"message":"80","line":9,"column":8,"nodeType":"78","messageId":"79","endLine":9,"endColumn":17},{"ruleId":"76","severity":1,"message":"81","line":10,"column":8,"nodeType":"78","messageId":"79","endLine":10,"endColumn":13},{"ruleId":"76","severity":1,"message":"82","line":11,"column":8,"nodeType":"78","messageId":"79","endLine":11,"endColumn":12},{"ruleId":"76","severity":1,"message":"83","line":12,"column":10,"nodeType":"78","messageId":"79","endLine":12,"endColumn":17},{"ruleId":"76","severity":1,"message":"84","line":33,"column":43,"nodeType":"78","messageId":"79","endLine":33,"endColumn":49},{"ruleId":"76","severity":1,"message":"85","line":1,"column":16,"nodeType":"78","messageId":"79","endLine":1,"endColumn":24},{"ruleId":"76","severity":1,"message":"86","line":7,"column":22,"nodeType":"78","messageId":"79","endLine":7,"endColumn":30},{"ruleId":"76","severity":1,"message":"87","line":18,"column":10,"nodeType":"78","messageId":"79","endLine":18,"endColumn":18},{"ruleId":"88","severity":1,"message":"89","line":103,"column":11,"nodeType":"90","endLine":103,"endColumn":45},{"ruleId":"76","severity":1,"message":"85","line":1,"column":16,"nodeType":"78","messageId":"79","endLine":1,"endColumn":24},{"ruleId":"76","severity":1,"message":"85","line":1,"column":16,"nodeType":"78","messageId":"79","endLine":1,"endColumn":24},{"ruleId":"76","severity":1,"message":"91","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":18},{"ruleId":"92","severity":1,"message":"93","line":21,"column":51,"nodeType":"94","messageId":"95","endLine":21,"endColumn":53},{"ruleId":"88","severity":1,"message":"89","line":59,"column":17,"nodeType":"90","endLine":59,"endColumn":51},{"ruleId":"92","severity":1,"message":"93","line":21,"column":45,"nodeType":"94","messageId":"95","endLine":21,"endColumn":47},{"ruleId":"88","severity":1,"message":"89","line":73,"column":17,"nodeType":"90","endLine":73,"endColumn":51},{"ruleId":"76","severity":1,"message":"85","line":1,"column":16,"nodeType":"78","messageId":"79","endLine":1,"endColumn":24},{"ruleId":"76","severity":1,"message":"96","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":13},{"ruleId":"92","severity":1,"message":"93","line":19,"column":65,"nodeType":"94","messageId":"95","endLine":19,"endColumn":67},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"@typescript-eslint/no-unused-vars","'orange' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Paper' is defined but never used.","'Grid' is defined but never used.","'Widgets' is defined but never used.","'height' is assigned a value but never used.","'useState' is defined but never used.","'useTheme' is defined but never used.","'Redirect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Typography' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]